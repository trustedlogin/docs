"use strict";(self.webpackChunktrustedlogin_docs=self.webpackChunktrustedlogin_docs||[]).push([[309],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8687:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={title:"CI/CD",sidebar_position:2},o="Continuous Integration and Continuous Deployment (CI/CD)",l={unversionedId:"SaaS/CI-CD",id:"SaaS/CI-CD",title:"CI/CD",description:"Each pull request will trigger a build in ChipperCI for testing and a QA site on dev Kubernetes cluster.",source:"@site/docs/SaaS/CI-CD.md",sourceDirName:"SaaS",slug:"/SaaS/CI-CD",permalink:"/SaaS/CI-CD",draft:!1,editUrl:"https://github.com/trustedlogin/docs/edit/main/docs/SaaS/CI-CD.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"CI/CD",sidebar_position:2},sidebar:"SaaS",previous:{title:"SaaS Intro",permalink:"/SaaS/intro"},next:{title:"Server Setup",permalink:"/SaaS/server-setup"}},s={},u=[{value:"What We Are Using",id:"what-we-are-using",level:2},{value:"GitHub",id:"github",level:2},{value:"Kubernetes + Github Actions",id:"kubernetes--github-actions",level:2},{value:"Deploying to Master",id:"deploying-to-master",level:3},{value:"Troubleshooting Kubernetes deploy issues.",id:"troubleshooting-kubernetes-deploy-issues",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"continuous-integration-and-continuous-deployment-cicd"},"Continuous Integration and Continuous Deployment (CI/CD)"),(0,a.kt)("p",null,"Each pull request will trigger a build in ChipperCI for testing and a QA site on dev Kubernetes cluster."),(0,a.kt)("h2",{id:"what-we-are-using"},"What We Are Using"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/"},"Digital Ocean"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Hosts the app"),(0,a.kt)("li",{parentName:"ul"},"Provides a QA environment for each branch on different non production cluster."))),(0,a.kt)("li",{parentName:"ul"},"GitHub",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Hosts the code and issue tracker."),(0,a.kt)("li",{parentName:"ul"},"Runs automated testing."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://phpunit.de/"},"PHPUnit"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Used for PHP tests, including browser tests.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://laravel.com/docs/5.8/testing"},"Laravel Testing Docs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://laravel.com/docs/5.8/dusk"},"Browser Testing Docs"))))))),(0,a.kt)("h2",{id:"github"},"GitHub"),(0,a.kt)("p",null,"Whenever you push to a branch containing an open pull request:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"GitHub Actions will run tests using PHPUnit. These include unit/integration tests as well as browser tests using Dusk."),(0,a.kt)("li",{parentName:"ol"},"Platform will deploy an environment that you can use for manual QA and testing.")),(0,a.kt)("h2",{id:"kubernetes--github-actions"},"Kubernetes + Github Actions"),(0,a.kt)("p",null,"We utilize GitHub Actions in conjunction with Helm to deploy application code to a production-grade Kubernetes cluster. Upon creating a pull request, a new QA environment is generated, and its URL is accessible based on your GitHub branch name. Developers conduct testing in the dev/test environment, undergo peer review."),(0,a.kt)("h3",{id:"deploying-to-master"},"Deploying to Master"),(0,a.kt)("p",null,"To deploy to master, merge any open PR to master. Upon approval, the code is merged into the master branch. Subsequently, the CI/CD process initiates, deploying the code to the production Kubernetes cluster."),(0,a.kt)("h3",{id:"troubleshooting-kubernetes-deploy-issues"},"Troubleshooting Kubernetes deploy issues."),(0,a.kt)("p",null,"If a pull request does ",(0,a.kt)("em",{parentName:"p"},"not")," create a new build in dev Kubernetes, there are a few reasons to look at first:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check if the Docker build for the application succeeded."),(0,a.kt)("li",{parentName:"ol"},"Check if all the necessary infrastructure is created in a namespace related to your Git branch in the dev cluster."),(0,a.kt)("li",{parentName:"ol"},"Check if the deploy stage succeeded in GitHub Actions.")))}d.isMDXComponent=!0}}]);