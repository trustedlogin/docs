"use strict";(self.webpackChunktrustedlogin_docs=self.webpackChunktrustedlogin_docs||[]).push([[6],{9919:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(4848),s=t(8453);const r={title:"CI/CD",sidebar_position:2},o="Continuous Integration and Continuous Deployment (CI/CD)",l={id:"SaaS/CI-CD",title:"CI/CD",description:"Each pull request will trigger a build in ChipperCI for testing and a QA site on dev Kubernetes cluster.",source:"@site/docs/SaaS/CI-CD.md",sourceDirName:"SaaS",slug:"/SaaS/CI-CD",permalink:"/SaaS/CI-CD",draft:!1,unlisted:!1,editUrl:"https://github.com/trustedlogin/docs/edit/main/docs/SaaS/CI-CD.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"CI/CD",sidebar_position:2},sidebar:"SaaS",previous:{title:"SaaS Intro",permalink:"/SaaS/intro"},next:{title:"Server Setup",permalink:"/SaaS/server-setup"}},a={},c=[{value:"What We Are Using",id:"what-we-are-using",level:2},{value:"GitHub",id:"github",level:2},{value:"Kubernetes + Github Actions",id:"kubernetes--github-actions",level:2},{value:"Deploying to Master",id:"deploying-to-master",level:3},{value:"Troubleshooting Kubernetes deploy issues.",id:"troubleshooting-kubernetes-deploy-issues",level:3}];function u(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"continuous-integration-and-continuous-deployment-cicd",children:"Continuous Integration and Continuous Deployment (CI/CD)"}),"\n",(0,i.jsx)(n.p,{children:"Each pull request will trigger a build in ChipperCI for testing and a QA site on dev Kubernetes cluster."}),"\n",(0,i.jsx)(n.h2,{id:"what-we-are-using",children:"What We Are Using"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/",children:"Digital Ocean"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hosts the app"}),"\n",(0,i.jsx)(n.li,{children:"Provides a QA environment for each branch on different non production cluster."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["GitHub","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hosts the code and issue tracker."}),"\n",(0,i.jsx)(n.li,{children:"Runs automated testing."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://phpunit.de/",children:"PHPUnit"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used for PHP tests, including browser tests.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://laravel.com/docs/5.8/testing",children:"Laravel Testing Docs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://laravel.com/docs/5.8/dusk",children:"Browser Testing Docs"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"github",children:"GitHub"}),"\n",(0,i.jsx)(n.p,{children:"Whenever you push to a branch containing an open pull request:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"GitHub Actions will run tests using PHPUnit. These include unit/integration tests as well as browser tests using Dusk."}),"\n",(0,i.jsx)(n.li,{children:"Platform will deploy an environment that you can use for manual QA and testing."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"kubernetes--github-actions",children:"Kubernetes + Github Actions"}),"\n",(0,i.jsx)(n.p,{children:"We utilize GitHub Actions in conjunction with Helm to deploy application code to a production-grade Kubernetes cluster. Upon creating a pull request, a new QA environment is generated, and its URL is accessible based on your GitHub branch name. Developers conduct testing in the dev/test environment, undergo peer review."}),"\n",(0,i.jsx)(n.h3,{id:"deploying-to-master",children:"Deploying to Master"}),"\n",(0,i.jsx)(n.p,{children:"To deploy to master, merge any open PR to master. Upon approval, the code is merged into the master branch. Subsequently, the CI/CD process initiates, deploying the code to the production Kubernetes cluster."}),"\n",(0,i.jsx)(n.h3,{id:"troubleshooting-kubernetes-deploy-issues",children:"Troubleshooting Kubernetes deploy issues."}),"\n",(0,i.jsxs)(n.p,{children:["If a pull request does ",(0,i.jsx)(n.em,{children:"not"})," create a new build in dev Kubernetes, there are a few reasons to look at first:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Check if the Docker build for the application succeeded."}),"\n",(0,i.jsx)(n.li,{children:"Check if all the necessary infrastructure is created in a namespace related to your Git branch in the dev cluster."}),"\n",(0,i.jsx)(n.li,{children:"Check if the deploy stage succeeded in GitHub Actions."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);