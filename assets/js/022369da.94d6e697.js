"use strict";(self.webpackChunktrustedlogin_docs=self.webpackChunktrustedlogin_docs||[]).push([[306],{4724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(4848),i=n(8453);const a={},r="Remote User Authentication",o={id:"SaaS/user-remote-authentication",title:"Remote User Authentication",description:"In the TrustedLogin Connector plugin (the support-side plugin), users must log into the SaaS app. This document explains how.",source:"@site/docs/SaaS/user-remote-authentication.md",sourceDirName:"SaaS",slug:"/SaaS/user-remote-authentication",permalink:"/SaaS/user-remote-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/trustedlogin/docs/edit/main/docs/SaaS/user-remote-authentication.md",tags:[],version:"current",frontMatter:{},sidebar:"SaaS",previous:{title:"Subcontractors",permalink:"/SaaS/subcontractors"},next:{title:"Vault API Client",permalink:"/SaaS/vault-client"}},c={},l=[{value:"Get The Account&#39;s ClientId and Client Secret",id:"get-the-accounts-clientid-and-client-secret",level:2},{value:"Get The Client ID and Secret",id:"get-the-client-id-and-secret",level:3},{value:"Login a User",id:"login-a-user",level:3},{value:"Verify Token",id:"verify-token",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"remote-user-authentication",children:"Remote User Authentication"}),"\n",(0,s.jsxs)(t.p,{children:["In the ",(0,s.jsx)(t.a,{href:"../Connector/",children:"TrustedLogin Connector plugin"})," (the support-side plugin), users must log into the SaaS app. This document explains how."]}),"\n",(0,s.jsx)(t.h2,{id:"get-the-accounts-clientid-and-client-secret",children:"Get The Account's ClientId and Client Secret"}),"\n",(0,s.jsx)(t.h3,{id:"get-the-client-id-and-secret",children:"Get The Client ID and Secret"}),"\n",(0,s.jsxs)(t.p,{children:["Each account has an oAuth client of the ",(0,s.jsx)(t.a,{href:"https://laravel.com/docs/5.8/passport#password-grant-tokens",children:"password grant type"}),". The vendor side plugin should have settings for API key, Public Key and account id. These are all visible in team settings in SaaS app."]}),"\n",(0,s.jsxs)(t.p,{children:["To obtain this information, make a GET request to ",(0,s.jsx)(t.code,{children:"/api/accounts/<accountId>"})," where accountId is the ID of the account. This request should set, in the ",(0,s.jsx)(t.code,{children:"X-TL-TOKEN"})," header, the ",(0,s.jsx)(t.code,{children:"sha256"})," hash of the public key joined, without spaces to the api key."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"$hash = hash( 'sha256', $publicKey . $apiKey );\n"})}),"\n",(0,s.jsxs)(t.p,{children:["That response will include ",(0,s.jsx)(t.code,{children:"clientId"})," and ",(0,s.jsx)(t.code,{children:"clientSecret"}),". You will need them to login. It also includes the readToken for the team."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://user-images.githubusercontent.com/1994311/63133352-dddeb000-bf92-11e9-96a5-8b99b5d1b378.PNG",alt:"team-keys"})}),"\n",(0,s.jsx)(t.h3,{id:"login-a-user",children:"Login a User"}),"\n",(0,s.jsxs)(t.p,{children:["Then you can use that to make a POST request to request an oath token and the accounts read token to ",(0,s.jsx)(t.code,{children:"/oauth/token"}),".  With this body:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"{\n        'grant_type' => 'password',\n        'client_id' => 'client-id', // this is the clientId from above\n        'client_secret' => 'client-secret', //this is the clientSecret from above\n        'username' => 'roy@hiroy.club', //user name\n        'password' => 'my-password', //userpassword,\n        'scopes' => '*'\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If the login is successful, a ",(0,s.jsx)(t.code,{children:"200"})," status code and a response like this will be returned:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n    "token_type": "Bearer",\n    "expires_in": 259199,\n    "access_token": "very-long-string",\n    "refresh_token": "also-very-long"\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"access_token"})," is very long, and should be stored for later."]}),"\n",(0,s.jsx)(t.h3,{id:"verify-token",children:"Verify Token"}),"\n",(0,s.jsxs)(t.p,{children:["To verify that a token is still valid, use it as a bearer token to request user details by making a GET request to ",(0,s.jsx)(t.code,{children:"api/user"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Headers:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"[\n    'Accept' => 'application/json',\n    'Authorization' => 'Bearer '. $accessToken,\n],\n"})}),"\n",(0,s.jsx)(t.p,{children:"This will return the current username, ID, and email if valid."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);