"use strict";(self.webpackChunktrustedlogin_docs=self.webpackChunktrustedlogin_docs||[]).push([[646],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=a,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="Remote User Authentication",s={unversionedId:"SaaS/user-remote-authentication",id:"SaaS/user-remote-authentication",title:"Remote User Authentication",description:"In the Vendor plugin (the support-side plugin), users must log into the SaaS app. This document explains how.",source:"@site/docs/SaaS/user-remote-authentication.md",sourceDirName:"SaaS",slug:"/SaaS/user-remote-authentication",permalink:"/SaaS/user-remote-authentication",draft:!1,editUrl:"https://github.com/trustedlogin/docs/edit/main/docs/SaaS/user-remote-authentication.md",tags:[],version:"current",frontMatter:{},sidebar:"SaaS",previous:{title:"Subcontractors",permalink:"/SaaS/subcontractors"},next:{title:"Vault API Client",permalink:"/SaaS/vault-client"}},l={},c=[{value:"Get The Account&#39;s ClientId and Client Secret",id:"get-the-accounts-clientid-and-client-secret",level:2},{value:"Get The Client ID and Secret",id:"get-the-client-id-and-secret",level:3},{value:"Login a User",id:"login-a-user",level:3},{value:"Verify Token",id:"verify-token",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"remote-user-authentication"},"Remote User Authentication"),(0,a.kt)("p",null,"In the ",(0,a.kt)("a",{parentName:"p",href:"../vendor/"},"Vendor plugin")," (the support-side plugin), users must log into the SaaS app. This document explains how."),(0,a.kt)("h2",{id:"get-the-accounts-clientid-and-client-secret"},"Get The Account's ClientId and Client Secret"),(0,a.kt)("h3",{id:"get-the-client-id-and-secret"},"Get The Client ID and Secret"),(0,a.kt)("p",null,"Each account has an oAuth client of the ",(0,a.kt)("a",{parentName:"p",href:"https://laravel.com/docs/5.8/passport#password-grant-tokens"},"password grant type"),". The vendor side plugin should have settings for API key, Public Key and account id. These are all visible in team settings in SaaS app."),(0,a.kt)("p",null,"To obtain this information, make a GET request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/api/accounts/<accountId>")," where accountId is the ID of the account. This request should set, in the ",(0,a.kt)("inlineCode",{parentName:"p"},"X-TL-TOKEN")," header, the ",(0,a.kt)("inlineCode",{parentName:"p"},"sha256")," hash of the public key joined, without spaces to the api key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$hash = hash( 'sha256', $publicKey . $apiKey );\n")),(0,a.kt)("p",null,"That response will include ",(0,a.kt)("inlineCode",{parentName:"p"},"clientId")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"clientSecret"),". You will need them to login. It also includes the readToken for the team."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/1994311/63133352-dddeb000-bf92-11e9-96a5-8b99b5d1b378.PNG",alt:"team-keys"})),(0,a.kt)("h3",{id:"login-a-user"},"Login a User"),(0,a.kt)("p",null,"Then you can use that to make a POST request to request an oath token and the accounts read token to ",(0,a.kt)("inlineCode",{parentName:"p"},"/oauth/token"),".  With this body:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"{\n        'grant_type' => 'password',\n        'client_id' => 'client-id', // this is the clientId from above\n        'client_secret' => 'client-secret', //this is the clientSecret from above\n        'username' => 'roy@hiroy.club', //user name\n        'password' => 'my-password', //userpassword,\n        'scopes' => '*'\n}\n")),(0,a.kt)("p",null,"If the login is successful, a ",(0,a.kt)("inlineCode",{parentName:"p"},"200")," status code and a response like this will be returned:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "token_type": "Bearer",\n    "expires_in": 259199,\n    "access_token": "very-long-string",\n    "refresh_token": "also-very-long"\n}\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"access_token")," is very long, and should be stored for later. "),(0,a.kt)("h3",{id:"verify-token"},"Verify Token"),(0,a.kt)("p",null,"To verify that a token is still valid, use it as a bearer token to request user details by making a GET request to ",(0,a.kt)("inlineCode",{parentName:"p"},"api/user"),"."),(0,a.kt)("p",null,"Headers:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"[\n    'Accept' => 'application/json',\n    'Authorization' => 'Bearer '. $accessToken,\n],\n")),(0,a.kt)("p",null,"This will return the current username, ID, and email if valid."))}d.isMDXComponent=!0}}]);